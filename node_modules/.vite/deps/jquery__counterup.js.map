{
  "version": 3,
  "sources": ["../../jquery.counterup/jquery.counterup.js"],
  "sourcesContent": ["/*!\n * jquery.counterup.js 2.1.0\n *\n * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal\n * Released under the GPL v2 License\n *\n * Amended by Jeremy Paris, Ciro Mattia Gonano and others\n *\n * Date: Feb 24, 2017\n */\n(function ($) {\n    \"use strict\";\n\n    $.fn.counterUp = function (options) {\n\n        // Defaults\n        var settings = $.extend({\n                'time': 400,\n                'delay': 10,\n                'offset': 100,\n                'beginAt': 0,\n                'formatter': false,\n                'context': 'window',\n                callback: function () {\n                }\n            }, options),\n            s;\n\n        return this.each(function () {\n\n            // Store the object\n            var $this = $(this),\n                counter = {\n                    time: $(this).data('counterup-time') || settings.time,\n                    delay: $(this).data('counterup-delay') || settings.delay,\n                    offset: $(this).data('counterup-offset') || settings.offset,\n                    beginAt: $(this).data('counterup-beginat') || settings.beginAt,\n                    context: $(this).data('counterup-context') || settings.context\n                };\n\n            var counterUpper = function () {\n                var nums = [];\n                var divisions = counter.time / counter.delay;\n                var num = $(this).attr('data-num') ? $(this).attr('data-num') : $this.text();\n                var isComma = /[0-9]+,[0-9]+/.test(num);\n                num = num.replace(/,/g, '');\n                var decimalPlaces = (num.split('.')[1] || []).length;\n                if (counter.beginAt > num)\n                    counter.beginAt = num;\n\n                var isTime = /[0-9]+:[0-9]+:[0-9]+/.test(num);\n\n                // Convert time to total seconds\n                if (isTime) {\n                    var times = num.split(':'),\n                        m = 1;\n                    s = 0;\n                    while (times.length > 0) {\n                        s += m * parseInt(times.pop(), 10);\n                        m *= 60;\n                    }\n                }\n\n                // Generate list of incremental numbers to display\n                for (var i = divisions; i >= counter.beginAt / num * divisions; i--) {\n\n                    var newNum = parseFloat(num / divisions * i).toFixed(decimalPlaces);\n\n                    // Add incremental seconds and convert back to time\n                    if (isTime) {\n                        newNum = parseInt(s / divisions * i);\n                        var hours = parseInt(newNum / 3600) % 24;\n                        var minutes = parseInt(newNum / 60) % 60;\n                        var seconds = parseInt(newNum % 60, 10);\n                        newNum = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n                    }\n\n                    // Preserve commas if input had commas\n                    if (isComma) {\n                        while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\n                            newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, '$1' + ',' + '$2');\n                        }\n                    }\n                    if (settings.formatter) {\n                        newNum = settings.formatter.call(this, newNum);\n                    }\n                    nums.unshift(newNum);\n                }\n\n                $this.data('counterup-nums', nums);\n                $this.text(counter.beginAt);\n\n                // Updates the number until we're done\n                var f = function () {\n                    if (!$this.data('counterup-nums')) {\n                        settings.callback.call(this);\n                        return;\n                    }\n                    $this.html($this.data('counterup-nums').shift());\n                    if ($this.data('counterup-nums').length) {\n                        setTimeout($this.data('counterup-func'), counter.delay);\n                    } else {\n                        $this.data('counterup-nums', null);\n                        $this.data('counterup-func', null);\n                        settings.callback.call(this);\n                    }\n                };\n                $this.data('counterup-func', f);\n\n                // Start the count up\n                setTimeout($this.data('counterup-func'), counter.delay);\n            };\n\n            // Perform counts when the element gets into view\n            $this.waypoint(function (direction) {\n                counterUpper();\n                this.destroy(); //-- Waypoint 3.0 version of triggerOnce\n            }, {offset: counter.offset + \"%\", context: counter.context});\n        });\n\n    };\n\n})(jQuery);\n"],
  "mappings": "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",
  "names": []
}
